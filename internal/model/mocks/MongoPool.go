// Code generated by MockGen. DO NOT EDIT.
// Source: mongo_pool.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	model "github.com/Totus-Floreo/asperitas-on-go/internal/model"
	gomock "github.com/golang/mock/gomock"
)

// MockIDBReadersPool is a mock of IDBReadersPool interface.
type MockIDBReadersPool struct {
	ctrl     *gomock.Controller
	recorder *MockIDBReadersPoolMockRecorder
}

// MockIDBReadersPoolMockRecorder is the mock recorder for MockIDBReadersPool.
type MockIDBReadersPoolMockRecorder struct {
	mock *MockIDBReadersPool
}

// NewMockIDBReadersPool creates a new mock instance.
func NewMockIDBReadersPool(ctrl *gomock.Controller) *MockIDBReadersPool {
	mock := &MockIDBReadersPool{ctrl: ctrl}
	mock.recorder = &MockIDBReadersPoolMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIDBReadersPool) EXPECT() *MockIDBReadersPoolMockRecorder {
	return m.recorder
}

// GetConnection mocks base method.
func (m *MockIDBReadersPool) GetConnection() model.IClient {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetConnection")
	ret0, _ := ret[0].(model.IClient)
	return ret0
}

// GetConnection indicates an expected call of GetConnection.
func (mr *MockIDBReadersPoolMockRecorder) GetConnection() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetConnection", reflect.TypeOf((*MockIDBReadersPool)(nil).GetConnection))
}

// ReleaseConnection mocks base method.
func (m *MockIDBReadersPool) ReleaseConnection(conn model.IClient) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "ReleaseConnection", conn)
}

// ReleaseConnection indicates an expected call of ReleaseConnection.
func (mr *MockIDBReadersPoolMockRecorder) ReleaseConnection(conn interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ReleaseConnection", reflect.TypeOf((*MockIDBReadersPool)(nil).ReleaseConnection), conn)
}
